#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Курсач
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="asd")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Inserttbl_Author(tbl_Author instance);
    partial void Updatetbl_Author(tbl_Author instance);
    partial void Deletetbl_Author(tbl_Author instance);
    partial void Inserttbl_Books(tbl_Books instance);
    partial void Updatetbl_Books(tbl_Books instance);
    partial void Deletetbl_Books(tbl_Books instance);
    partial void Inserttbl_Genre(tbl_Genre instance);
    partial void Updatetbl_Genre(tbl_Genre instance);
    partial void Deletetbl_Genre(tbl_Genre instance);
    partial void Inserttbl_Img(tbl_Img instance);
    partial void Updatetbl_Img(tbl_Img instance);
    partial void Deletetbl_Img(tbl_Img instance);
    partial void Inserttbl_OrderTY(tbl_OrderTY instance);
    partial void Updatetbl_OrderTY(tbl_OrderTY instance);
    partial void Deletetbl_OrderTY(tbl_OrderTY instance);
    partial void Inserttbl_Users(tbl_Users instance);
    partial void Updatetbl_Users(tbl_Users instance);
    partial void Deletetbl_Users(tbl_Users instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Курсач.Properties.Settings.Default.asdConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Author> tbl_Author
		{
			get
			{
				return this.GetTable<tbl_Author>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Books> tbl_Books
		{
			get
			{
				return this.GetTable<tbl_Books>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Genre> tbl_Genre
		{
			get
			{
				return this.GetTable<tbl_Genre>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Img> tbl_Img
		{
			get
			{
				return this.GetTable<tbl_Img>();
			}
		}
		
		public System.Data.Linq.Table<tbl_OrderTY> tbl_OrderTY
		{
			get
			{
				return this.GetTable<tbl_OrderTY>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Users> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_Users>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Author")]
	public partial class tbl_Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthorID;
		
		private string _AuthorName;
		
		private EntitySet<tbl_Books> _tbl_Books;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    #endregion
		
		public tbl_Author()
		{
			this._tbl_Books = new EntitySet<tbl_Books>(new Action<tbl_Books>(this.attach_tbl_Books), new Action<tbl_Books>(this.detach_tbl_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Author_tbl_Books", Storage="_tbl_Books", ThisKey="AuthorID", OtherKey="AuthorID")]
		public EntitySet<tbl_Books> tbl_Books
		{
			get
			{
				return this._tbl_Books;
			}
			set
			{
				this._tbl_Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Books(tbl_Books entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Author = this;
		}
		
		private void detach_tbl_Books(tbl_Books entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Books")]
	public partial class tbl_Books : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookID;
		
		private System.Nullable<int> _AuthorID;
		
		private System.Nullable<int> _GenreID;
		
		private System.Nullable<int> _ImageID;
		
		private string _Title;
		
		private int _Prise;
		
		private int _PriseStart;
		
		private EntitySet<tbl_OrderTY> _tbl_OrderTY;
		
		private EntityRef<tbl_Author> _tbl_Author;
		
		private EntityRef<tbl_Genre> _tbl_Genre;
		
		private EntityRef<tbl_Img> _tbl_Img;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(int value);
    partial void OnBookIDChanged();
    partial void OnAuthorIDChanging(System.Nullable<int> value);
    partial void OnAuthorIDChanged();
    partial void OnGenreIDChanging(System.Nullable<int> value);
    partial void OnGenreIDChanged();
    partial void OnImageIDChanging(System.Nullable<int> value);
    partial void OnImageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPriseChanging(int value);
    partial void OnPriseChanged();
    partial void OnPriseStartChanging(int value);
    partial void OnPriseStartChanged();
    #endregion
		
		public tbl_Books()
		{
			this._tbl_OrderTY = new EntitySet<tbl_OrderTY>(new Action<tbl_OrderTY>(this.attach_tbl_OrderTY), new Action<tbl_OrderTY>(this.detach_tbl_OrderTY));
			this._tbl_Author = default(EntityRef<tbl_Author>);
			this._tbl_Genre = default(EntityRef<tbl_Genre>);
			this._tbl_Img = default(EntityRef<tbl_Img>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int")]
		public System.Nullable<int> AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					if (this._tbl_Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", DbType="Int")]
		public System.Nullable<int> GenreID
		{
			get
			{
				return this._GenreID;
			}
			set
			{
				if ((this._GenreID != value))
				{
					if (this._tbl_Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenreIDChanging(value);
					this.SendPropertyChanging();
					this._GenreID = value;
					this.SendPropertyChanged("GenreID");
					this.OnGenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int")]
		public System.Nullable<int> ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._tbl_Img.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prise", DbType="Int NOT NULL")]
		public int Prise
		{
			get
			{
				return this._Prise;
			}
			set
			{
				if ((this._Prise != value))
				{
					this.OnPriseChanging(value);
					this.SendPropertyChanging();
					this._Prise = value;
					this.SendPropertyChanged("Prise");
					this.OnPriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriseStart", DbType="Int NOT NULL")]
		public int PriseStart
		{
			get
			{
				return this._PriseStart;
			}
			set
			{
				if ((this._PriseStart != value))
				{
					this.OnPriseStartChanging(value);
					this.SendPropertyChanging();
					this._PriseStart = value;
					this.SendPropertyChanged("PriseStart");
					this.OnPriseStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Books_tbl_OrderTY", Storage="_tbl_OrderTY", ThisKey="BookID", OtherKey="BookID")]
		public EntitySet<tbl_OrderTY> tbl_OrderTY
		{
			get
			{
				return this._tbl_OrderTY;
			}
			set
			{
				this._tbl_OrderTY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Author_tbl_Books", Storage="_tbl_Author", ThisKey="AuthorID", OtherKey="AuthorID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tbl_Author tbl_Author
		{
			get
			{
				return this._tbl_Author.Entity;
			}
			set
			{
				tbl_Author previousValue = this._tbl_Author.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Author.Entity = null;
						previousValue.tbl_Books.Remove(this);
					}
					this._tbl_Author.Entity = value;
					if ((value != null))
					{
						value.tbl_Books.Add(this);
						this._AuthorID = value.AuthorID;
					}
					else
					{
						this._AuthorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Genre_tbl_Books", Storage="_tbl_Genre", ThisKey="GenreID", OtherKey="GenreID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tbl_Genre tbl_Genre
		{
			get
			{
				return this._tbl_Genre.Entity;
			}
			set
			{
				tbl_Genre previousValue = this._tbl_Genre.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Genre.Entity = null;
						previousValue.tbl_Books.Remove(this);
					}
					this._tbl_Genre.Entity = value;
					if ((value != null))
					{
						value.tbl_Books.Add(this);
						this._GenreID = value.GenreID;
					}
					else
					{
						this._GenreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Genre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Img_tbl_Books", Storage="_tbl_Img", ThisKey="ImageID", OtherKey="ImageID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tbl_Img tbl_Img
		{
			get
			{
				return this._tbl_Img.Entity;
			}
			set
			{
				tbl_Img previousValue = this._tbl_Img.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Img.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Img.Entity = null;
						previousValue.tbl_Books.Remove(this);
					}
					this._tbl_Img.Entity = value;
					if ((value != null))
					{
						value.tbl_Books.Add(this);
						this._ImageID = value.ImageID;
					}
					else
					{
						this._ImageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Img");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_OrderTY(tbl_OrderTY entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Books = this;
		}
		
		private void detach_tbl_OrderTY(tbl_OrderTY entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Books = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Genre")]
	public partial class tbl_Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenreID;
		
		private string _GenreName;
		
		private EntitySet<tbl_Books> _tbl_Books;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    partial void OnGenreNameChanging(string value);
    partial void OnGenreNameChanged();
    #endregion
		
		public tbl_Genre()
		{
			this._tbl_Books = new EntitySet<tbl_Books>(new Action<tbl_Books>(this.attach_tbl_Books), new Action<tbl_Books>(this.detach_tbl_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenreID
		{
			get
			{
				return this._GenreID;
			}
			set
			{
				if ((this._GenreID != value))
				{
					this.OnGenreIDChanging(value);
					this.SendPropertyChanging();
					this._GenreID = value;
					this.SendPropertyChanged("GenreID");
					this.OnGenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string GenreName
		{
			get
			{
				return this._GenreName;
			}
			set
			{
				if ((this._GenreName != value))
				{
					this.OnGenreNameChanging(value);
					this.SendPropertyChanging();
					this._GenreName = value;
					this.SendPropertyChanged("GenreName");
					this.OnGenreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Genre_tbl_Books", Storage="_tbl_Books", ThisKey="GenreID", OtherKey="GenreID")]
		public EntitySet<tbl_Books> tbl_Books
		{
			get
			{
				return this._tbl_Books;
			}
			set
			{
				this._tbl_Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Books(tbl_Books entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Genre = this;
		}
		
		private void detach_tbl_Books(tbl_Books entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Img")]
	public partial class tbl_Img : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private string _ImageName;
		
		private EntitySet<tbl_Books> _tbl_Books;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    #endregion
		
		public tbl_Img()
		{
			this._tbl_Books = new EntitySet<tbl_Books>(new Action<tbl_Books>(this.attach_tbl_Books), new Action<tbl_Books>(this.detach_tbl_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Img_tbl_Books", Storage="_tbl_Books", ThisKey="ImageID", OtherKey="ImageID")]
		public EntitySet<tbl_Books> tbl_Books
		{
			get
			{
				return this._tbl_Books;
			}
			set
			{
				this._tbl_Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Books(tbl_Books entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Img = this;
		}
		
		private void detach_tbl_Books(tbl_Books entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Img = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_OrderTY")]
	public partial class tbl_OrderTY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<int> _BookID;
		
		private System.Nullable<int> _UserID;
		
		private int _Amount;
		
		private int _PriseAll;
		
		private bool _Oplacheno;
		
		private System.DateTime _DataOrder;
		
		private EntityRef<tbl_Books> _tbl_Books;
		
		private EntityRef<tbl_Users> _tbl_Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnPriseAllChanging(int value);
    partial void OnPriseAllChanged();
    partial void OnOplachenoChanging(bool value);
    partial void OnOplachenoChanged();
    partial void OnDataOrderChanging(System.DateTime value);
    partial void OnDataOrderChanged();
    #endregion
		
		public tbl_OrderTY()
		{
			this._tbl_Books = default(EntityRef<tbl_Books>);
			this._tbl_Users = default(EntityRef<tbl_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
		public System.Nullable<int> BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._tbl_Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbl_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriseAll", DbType="Int NOT NULL")]
		public int PriseAll
		{
			get
			{
				return this._PriseAll;
			}
			set
			{
				if ((this._PriseAll != value))
				{
					this.OnPriseAllChanging(value);
					this.SendPropertyChanging();
					this._PriseAll = value;
					this.SendPropertyChanged("PriseAll");
					this.OnPriseAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oplacheno", DbType="Bit NOT NULL")]
		public bool Oplacheno
		{
			get
			{
				return this._Oplacheno;
			}
			set
			{
				if ((this._Oplacheno != value))
				{
					this.OnOplachenoChanging(value);
					this.SendPropertyChanging();
					this._Oplacheno = value;
					this.SendPropertyChanged("Oplacheno");
					this.OnOplachenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOrder", DbType="Date NOT NULL")]
		public System.DateTime DataOrder
		{
			get
			{
				return this._DataOrder;
			}
			set
			{
				if ((this._DataOrder != value))
				{
					this.OnDataOrderChanging(value);
					this.SendPropertyChanging();
					this._DataOrder = value;
					this.SendPropertyChanged("DataOrder");
					this.OnDataOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Books_tbl_OrderTY", Storage="_tbl_Books", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tbl_Books tbl_Books
		{
			get
			{
				return this._tbl_Books.Entity;
			}
			set
			{
				tbl_Books previousValue = this._tbl_Books.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Books.Entity = null;
						previousValue.tbl_OrderTY.Remove(this);
					}
					this._tbl_Books.Entity = value;
					if ((value != null))
					{
						value.tbl_OrderTY.Add(this);
						this._BookID = value.BookID;
					}
					else
					{
						this._BookID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Books");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Users_tbl_OrderTY", Storage="_tbl_Users", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tbl_Users tbl_Users
		{
			get
			{
				return this._tbl_Users.Entity;
			}
			set
			{
				tbl_Users previousValue = this._tbl_Users.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Users.Entity = null;
						previousValue.tbl_OrderTY.Remove(this);
					}
					this._tbl_Users.Entity = value;
					if ((value != null))
					{
						value.tbl_OrderTY.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Users")]
	public partial class tbl_Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FullName;
		
		private string _Street;
		
		private string _PhoneNumber;
		
		private string _Password_User;
		
		private int _Balanse;
		
		private bool _Blocked;
		
		private System.Nullable<int> _BalanseReq;
		
		private EntitySet<tbl_OrderTY> _tbl_OrderTY;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPassword_UserChanging(string value);
    partial void OnPassword_UserChanged();
    partial void OnBalanseChanging(int value);
    partial void OnBalanseChanged();
    partial void OnBlockedChanging(bool value);
    partial void OnBlockedChanged();
    partial void OnBalanseReqChanging(System.Nullable<int> value);
    partial void OnBalanseReqChanged();
    #endregion
		
		public tbl_Users()
		{
			this._tbl_OrderTY = new EntitySet<tbl_OrderTY>(new Action<tbl_OrderTY>(this.attach_tbl_OrderTY), new Action<tbl_OrderTY>(this.detach_tbl_OrderTY));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_User", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Password_User
		{
			get
			{
				return this._Password_User;
			}
			set
			{
				if ((this._Password_User != value))
				{
					this.OnPassword_UserChanging(value);
					this.SendPropertyChanging();
					this._Password_User = value;
					this.SendPropertyChanged("Password_User");
					this.OnPassword_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balanse", DbType="Int NOT NULL")]
		public int Balanse
		{
			get
			{
				return this._Balanse;
			}
			set
			{
				if ((this._Balanse != value))
				{
					this.OnBalanseChanging(value);
					this.SendPropertyChanging();
					this._Balanse = value;
					this.SendPropertyChanged("Balanse");
					this.OnBalanseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blocked", DbType="Bit NOT NULL")]
		public bool Blocked
		{
			get
			{
				return this._Blocked;
			}
			set
			{
				if ((this._Blocked != value))
				{
					this.OnBlockedChanging(value);
					this.SendPropertyChanging();
					this._Blocked = value;
					this.SendPropertyChanged("Blocked");
					this.OnBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanseReq", DbType="Int")]
		public System.Nullable<int> BalanseReq
		{
			get
			{
				return this._BalanseReq;
			}
			set
			{
				if ((this._BalanseReq != value))
				{
					this.OnBalanseReqChanging(value);
					this.SendPropertyChanging();
					this._BalanseReq = value;
					this.SendPropertyChanged("BalanseReq");
					this.OnBalanseReqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Users_tbl_OrderTY", Storage="_tbl_OrderTY", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tbl_OrderTY> tbl_OrderTY
		{
			get
			{
				return this._tbl_OrderTY;
			}
			set
			{
				this._tbl_OrderTY.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_OrderTY(tbl_OrderTY entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Users = this;
		}
		
		private void detach_tbl_OrderTY(tbl_OrderTY entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Users = null;
		}
	}
}
#pragma warning restore 1591
